plugins {
    id 'scala'
}

group = 'org.oclc.aws'
version = '0.1'

ext {
    hbaseVersion = '1.2.0-cdh5.12.1'
}

configurations {
    phatlibs
}
dependencies {
    // Use Scala 2.11 in our library project
    implementation 'org.rogach:scallop_2.11:3.1.3'
    phatlibs ('org.rogach:scallop_2.11:3.1.3') {
        transitive = false
    }
    compileOnly 'org.scala-lang:scala-library:2.11.8',
            'org.apache.spark:spark-core_2.11:2.2.0',
            'org.scala-lang.modules:scala-xml_2.11:1.0.6',
            'org.apache.spark:spark-sql_2.11:2.2.0',
            "org.apache.hbase:hbase-client:$hbaseVersion",
            "org.apache.hbase:hbase-server:$hbaseVersion"

    // Use Scalatest for testing our library
    testCompile 'org.apache.spark:spark-core_2.11:2.2.0',
            'org.apache.spark:spark-sql_2.11:2.2.0'
    'org.scala-lang.modules:scala-xml_2.11:1.0.6'
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.11:3.0.5'

    // Need scala-xml at test runtime
    testRuntime 'org.scala-lang.modules:scala-xml_2.11:1.0.6'
}

// In this section you declare where to find the dependencies of your project
repositories {
    maven {
        url 'https://repository.cloudera.com/artifactory/cloudera-repos/'
    }
    jcenter()
}

task phatjar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'code.aws.ReadCSV'
    }
    classifier = 'phat'
    from { configurations.phatlibs.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    doLast {
        println "jar location = ${archivePath}"
    }
}

task scp {
    println "scp ${phatjar.archivePath} hddev1gw002dxm1.dev.oclc.org:~/Downloads/aws"
}


test {
    testLogging {
        showStandardStreams = true
    }
}

//task xxx {
//    configurations.testCompile.allDependencies.each {
//        println(it.name)
//    }
//}