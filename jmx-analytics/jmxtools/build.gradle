plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
}
configurations {
    withDeps
}

configurations.all {
    resolutionStrategy {
        failOnDynamicVersions()
    }
}

dependencies {
    implementation(
            "org.slf4j:slf4j-api:${slf4jVersion}",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.google.guava:guava:${guavaVersion}"
    )
    implementation("org.apache.httpcomponents:fluent-hc:${httpVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compileOnly("org.apache.hbase:hbase-client:${hbaseVersion}") {
        exclude group: 'org.apache.curator', module: '*'
    }

    // Use JUnit Jupiter API for testing.
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.2',
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    )

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    testImplementation("org.apache.hbase:hbase-client:${hbaseVersion}") {
        exclude group: 'org.apache.curator', module: '*'
    }
    testImplementation(
            "org.slf4j:slf4j-log4j12:${slf4jVersion}",
            "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    )

    withDeps("org.apache.httpcomponents:fluent-hc:${httpVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task fatjar(type: Jar) {
    archiveClassifier = "withDeps"
    from sourceSets.main.output
    from(configurations.withDeps.collect { it.isDirectory() ? it : zipTree(it) })
}