/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven {
        url 'https://repository.cloudera.com/artifactory/cloudera-repos/'
    }
    maven {
        url 'https://artifact-m1.shr.oclc.org/artifactory/releases/'
    }
    maven {
        url 'https://artifact-m1.shr.oclc.org/artifactory/internal'
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8

dependencies {
    api (
            'org.slf4j:slf4j-log4j12:1.7.+',
            'org.slf4j:jcl-over-slf4j:1.7.+',
            'com.fasterxml.jackson.core:jackson-databind:2.11.3',
            'com.google.guava:guava:16.0.1',
            'org.apache.hbase:hbase-client:1.2.0-cdh5.16.2'
    )
    api ('org.apache.httpcomponents:fluent-hc:4.5.13'){
        exclude group:'commons-logging', module:'commons-logging'
    }
    // Use JUnit Jupiter API for testing.
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.2',
            'com.fasterxml.jackson.core:jackson-databind:2.11.3'
    )

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

jar {
    manifest {
        attributes('Main-Class':'jmx.extractor.JmxPoll')
    }
}

task demo(type: JavaExec){
    main = "jmx.extractor.JmxPoll"
    classpath = sourceSets.test.runtimeClasspath
    args 'hddev1db008dxc1.dev.oclc.org'
}
